<?xml version="1.0" encoding="UTF-8"?><diagram program="umlet" version="11.3">
  <help_text>// Uncomment the following line to change the fontsize and font:
fontsize=13
fontfamily=Monospaced //possible: SansSerif,Serif,Monospaced


//////////////////////////////////////////////////////////////////////////////////////////////
// Welcome to UMLet!
//
// Double-click on elements to add them to the diagram, or to copy them
// Edit elements by modifying the text in this panel
// Hold Ctrl to select multiple elements
// Use Ctrl+mouse to select via lasso
//
// Use +/- or Ctrl+mouse wheel to zoom
// Drag a whole relation at its central square icon
//
// Press Ctrl+C to copy the whole diagram to the system clipboard (then just paste it to, eg, Word)
// Edit the files in the "palettes" directory to create your own element palettes
//
// Select "Custom Elements &gt; New..." to create new element types
//////////////////////////////////////////////////////////////////////////////////////////////


// This text will be stored with each diagram;  use it for notes.</help_text>
  <zoom_level>10</zoom_level>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>580</x>
      <y>170</y>
      <w>320</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>fg=blue
Instance
--
symtable : SymTable
mytype : InstanceInterface
 
--
def call(args):
    return lookup('__call__').call(args)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>670</x>
      <y>340</y>
      <w>300</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>fg=blue
Function

--
args : ArgTypes
returns : lambda ArgType -&gt; TypeSet
mytype : target 'function'
--
def call(args):
    return self.returns(args)
 </panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>180</x>
      <y>340</y>
      <w>450</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>fg=blue
Class
--
mysuper : SymTable&lt;Class only&gt;

 
--
def call(args):
    if lookup('__init__') match args:
        return Instance('self.' symtable, self as type)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>680</x>
      <y>250</y>
      <w>50</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>30;30;30;90</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>570</x>
      <y>250</y>
      <w>50</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>30;30;30;90</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>930</x>
      <y>170</y>
      <w>160</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>TypeSet
--
&lt;&lt;set of Instances&gt;&gt;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>940</x>
      <y>260</y>
      <w>240</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>SymTable
--
dict : str -&gt; InstanceInterface</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>270</x>
      <y>180</y>
      <w>280</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>_target 'type': Class_
--
symbol __call__ ?
mytype = {self}
mysuper = {target 'object class'}
--
*built in*</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>350</x>
      <y>260</y>
      <w>170</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>lt=&lt;.
&lt;&lt;instanceOf&gt;&gt;</panel_attributes>
    <additional_attributes>90;80;90;30</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>780</x>
      <y>530</y>
      <w>220</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>_target 'foo()': Function_
--
*runtime*</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>810</x>
      <y>430</y>
      <w>170</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>lt=&lt;.
&lt;&lt;instanceOf&gt;&gt;</panel_attributes>
    <additional_attributes>90;30;90;100</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>460</x>
      <y>510</y>
      <w>290</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>_target 'int': Class_
--
mytype = {target 'type'}
mysuper = {target 'num abs class'}
--
*built in?*</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>460</x>
      <y>430</y>
      <w>170</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>lt=&lt;.
&lt;&lt;instanceOf&gt;&gt;</panel_attributes>
    <additional_attributes>90;30;90;80</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>150</x>
      <y>510</y>
      <w>280</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>_target 'function': Class_
--
mytype = {target 'type'}
mysuper = {target 'object class'}
--
*built in?*</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>230</x>
      <y>430</y>
      <w>170</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>lt=&lt;.
&lt;&lt;instanceOf&gt;&gt;</panel_attributes>
    <additional_attributes>90;30;90;80</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>160</x>
      <y>30</y>
      <w>280</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>ArgType
--
formal parameter list
should match actual parameter list</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>810</x>
      <y>80</y>
      <w>160</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>InstanceInterface</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>790</x>
      <y>80</y>
      <w>50</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>30;30;30;90</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>930</x>
      <y>80</y>
      <w>50</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>30;30;30;90</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>940</x>
      <y>60</y>
      <w>80</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>30;30;60;30</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>1000</x>
      <y>80</y>
      <w>80</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>AnyClass</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
